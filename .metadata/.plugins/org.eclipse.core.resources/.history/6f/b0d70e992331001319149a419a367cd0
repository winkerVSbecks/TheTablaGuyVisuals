import java.util.ArrayList;

import netP5.*;
import processing.core.*;
import themidibus.*;
import oscP5.*;

@SuppressWarnings("serial")
public class MainApp extends PApplet {
	 
    MidiBus myBus;
    OscP5 oscP5;
    NetAddress myRemoteLocation;
    
    Note[] notes = new Note [128];
    float[] amplitudes = new float[7];
    int activeSong;
    ArrayList<Song> songs;
    
    
    //**********************************************************
    // SETUP
    //**********************************************************
    public void setup() {
        size(1000, 700);
        smooth();
        rectMode(CENTER);
        
        MidiBus.list();
        myBus = new MidiBus(this, 0, 0); //"Java Sound Synthesizer"
        
        // Build Note Handlers
        for (int i = 0; i < notes.length; i++) {
			notes[i] = new Note();
		}
                
        songs.add(new Song(this,
        		notes,
				new int[] {67, 63, 62, 60, 56, 55, 51, 50, 48, 44, 43, 39, 38, 36},
				1));
        
        // Setup liveOSC
        oscP5 = new OscP5(this, 9001);
        myRemoteLocation = new NetAddress("localhost", 9000);
        oscP5.plug(this, "meters", "/live/track/meter");
    }
 
    
    //**********************************************************
    // DRAW
    //**********************************************************
    public void draw() {
    	
    	// Update all Midi Notes
	    for (int i = 0; i < notes.length; i++) {
	    	notes[i].update(false, useSustain);
		}
    	
    	songOne.draw();
        
    }
    
    
    //**********************************************************
    // Handle MIDI Calls
    //**********************************************************
    public void noteOn(int channel, int pitch, int velocity) {
    	// println("note on: "+pitch +" "+ velocity);
    	notes[pitch].on();
	}

    public void noteOff(int channel, int pitch, int velocity) {
    	// println("note off: "+pitch +" "+ velocity);
		notes[pitch].off();
	}
    
    
    //**********************************************************
    // Handle OSC Calls
    //**********************************************************
//    public void oscEvent(OscMessage theOscMessage) {
//    	println("addrpattern: "+theOscMessage.addrPattern());
//	}
    
    public void meters(int track, int channel, float value) {
    	if (amplitudes.length > track) {
    		amplitudes[track] = value;
    	}
    	// println("track: "+track+" channel: "+ channel+" value: "+value);
    }
    
    
    //**********************************************************
    // Input Handelers
    //**********************************************************
    public void keyPressed() {
    	if (key == 'm' || key == 'M') {
    		isGrid = !isGrid;
    	}
    	if (key == 's' || key =='S') {
    		useSustain = !useSustain;
    	}
    	
    	if (key == 'f' || key == 'F') {
    		doFade = !doFade;
    	}
    	
    	if (key == 'c' || key == 'C') {
    		showConsole = !showConsole;
    	}
    	
    	if (keyCode == UP) {
    		if (fade<255) fade += 5;
    	} 
    	if (keyCode == DOWN) {
    		if (fade>0) fade-=5;
    	}
    }
    
    
    //**********************************************************
    // MAIN
    //**********************************************************
    public static void main(String args[]) {
    	PApplet.main(new String[] { /*"--present",*/ "MainApp" });
    }
}







