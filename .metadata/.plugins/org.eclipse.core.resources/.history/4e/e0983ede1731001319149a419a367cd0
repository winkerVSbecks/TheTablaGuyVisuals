import processing.core.PApplet;

public class Note {
	MainApp parent;
	float ampStart, ampEnd, ampNow;
	float attack, sustain;
	boolean isNoteOn;
	int index;
	float x, y, b;
	int fStart, fEnd;
	
	public Note(MainApp _parent, int _index) {
        parent = _parent;
        index = _index;
        int ii = index+1;
        float res = parent.width/12.0f;
        x = ii*res % (parent.width-res);
        y = ( (ii*res - x) / (float)(parent.width-res) ) * res;
        y+=res/2;
        b = 10;
    }
	
	public float getAttack() {
		return this.attack;
	}
	
	public float getSustain() {
		return this.sustain;
	}
	
	public void on() {
		// handle note on
		isNoteOn = true;
		ampStart = parent.amplitudes[1];
		fStart = parent.frameCount;
	}
	
	public void off() {
		// handle note off
		isNoteOn = false;
		ampEnd = parent.amplitudes[1];
		fEnd = parent.frameCount;
		sustain = Math.abs(ampStart-ampEnd)/(fEnd-fStart);
	}
	
	public void update(boolean doRenderGrid, boolean useSustain) {
		// update midi, amp, attack and sustain
		ampNow = parent.amplitudes[5];
		if (isNoteOn) {
			b = PApplet.map(ampNow, 0.0f, 1.0f, 20.0f, 350.0f);
		} else {
			if (!useSustain) {
				b = Math.round(b);
				if(b>10) { b--; }
			} else {
				fadeOut(b, 10);
			}
		}
		if (doRenderGrid) render();		
	}
	
	private void fadeOut(float start, float target) {
		b = target - (start*sustain);
		if (b <= target) b = target;
	}
 
    private void render() {
    	parent.fill(220, 50, 47);
        parent.rect(x, y, b, b);
    }
}